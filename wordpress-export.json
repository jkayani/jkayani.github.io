{"data":{"posts":[{"id":6,"title":"About","slug":"about","markdown":"\n### Who are you?\n\nIn case you missed it (it\u2019s on the right side of the page), my name is Josh Kayani. I\u2019m an aspiring undergrad, currently studying Computer Science\u00c2\u00a0at [North Carolina State University](http:\/\/ncsu.edu), in Raleigh, NC. Go Pack!\n\n### Are you looking for internship\/job opportunities?\n\nAbsolutely! You can contact me via [email](mailto:josh@joshkayani.me) here, or find me online:\n\n[Github](http:\/\/github.com\/jkayani)\n\n[LinkedIn](https:\/\/www.linkedin.com\/in\/joshua-kayani-18b30381)\n\n### What can you do?\n\nMost of my experience is in the web stack; but, here\u2019s a list (in decreasing order of familiarity) of everything I\u2019ve ever worked with:\n\nFor school:\n\n- Java \u2013 including FindBugs, Checkstyle, PMD, and EclEmma plugins\n- C\u00c2\u00a0\u2013 C99 standard, with GCC compiler and GDB debugger\n- Jenkins (continuous integration)\n\n\u00a0\n\nFor research:\n\n- Chrome Extensions \u2013 written with JavaScript, HTML, CSS\n- Flask \u2013 a Python framework for basic server stuff\n- SQLite \u2013 a simple database system\n- R \u2013 a math and statistics geared programming language, great for data analytics\n\n\u00a0\n\nEverything else:\n\n- PHP and mySQL \u2013 they run this very blog with WordPress!\n- Google Apps Script\n- Visual Basic for Applications\n- Visual Basic .NET\n- TI-BASIC \u2013 used to program calculators!\n- Django \u2013 another Python framework, also for basic server stuff\n- Linux (specificially, Ubuntu and Red Hat)\n\n### \u00c2\u00a0What\u2019s your tech setup?\n\nI\u2019m currently using a [Dell XPS 13 (Early 2015)](https:\/\/wiki.archlinux.org\/index.php\/Dell_XPS_13_(2015)) running [Ubuntu 16.04 LTS](https:\/\/www.ubuntu.com\/) and the [KDE Plasma 5](https:\/\/www.kde.org\/) desktop environment. My preferred general-purpose text editor is [Atom](https:\/\/atom.io\/), and I currently use [Eclipse](https:\/\/eclipse.org\/) for Java development.\n\n\u00a0\n\n\u00a0\n\n\n","html":"<h3>Who are you?<\/h3>\n<p>In case you missed it (it&#8217;s on the right side of the page), my name is Josh Kayani. I&#8217;m an aspiring undergrad, currently studying Computer Science\u00a0at <a href=\"http:\/\/ncsu.edu\">North Carolina State University<\/a>, in Raleigh, NC. Go Pack!<\/p>\n<h3>Are you looking for internship\/job opportunities?<\/h3>\n<p>Absolutely! You can contact me via <a href=\"mailto:josh@joshkayani.me\">email<\/a> here, or find me online:<\/p>\n<p><a href=\"http:\/\/github.com\/jkayani\">Github<\/a><\/p>\n<p><a href=\"https:\/\/www.linkedin.com\/in\/joshua-kayani-18b30381\">LinkedIn<\/a><\/p>\n<h3>What can you do?<\/h3>\n<p>Most of my experience is in the web stack; but, here&#8217;s a list (in decreasing order of familiarity) of everything I&#8217;ve ever worked with:<\/p>\n<p>For school:<\/p>\n<ul>\n<li>Java &#8211; including FindBugs, Checkstyle, PMD, and EclEmma plugins<\/li>\n<li>C\u00a0&#8211; C99 standard, with GCC compiler and GDB debugger<\/li>\n<li>Jenkins (continuous integration)<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>For research:<\/p>\n<ul>\n<li>Chrome Extensions &#8211; written with JavaScript, HTML, CSS<\/li>\n<li>Flask &#8211; a Python framework for basic server stuff<\/li>\n<li>SQLite &#8211; a simple database system<\/li>\n<li>R &#8211; a math and statistics geared programming language, great for data analytics<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>Everything else:<\/p>\n<ul>\n<li>PHP and mySQL &#8211; they run this very blog with WordPress!<\/li>\n<li>Google Apps Script<\/li>\n<li>Visual Basic for Applications<\/li>\n<li>Visual Basic .NET<\/li>\n<li>TI-BASIC &#8211; used to program calculators!<\/li>\n<li>Django &#8211; another Python framework, also for basic server stuff<\/li>\n<li>Linux (specificially, Ubuntu and Red Hat)<\/li>\n<\/ul>\n<h3>\u00a0What&#8217;s your tech setup?<\/h3>\n<p>I&#8217;m currently using a <a href=\"https:\/\/wiki.archlinux.org\/index.php\/Dell_XPS_13_(2015)\">Dell XPS 13 (Early 2015)<\/a> running <a href=\"https:\/\/www.ubuntu.com\/\">Ubuntu 16.04 LTS<\/a> and the <a href=\"https:\/\/www.kde.org\/\">KDE Plasma 5<\/a> desktop environment. My preferred general-purpose text editor is <a href=\"https:\/\/atom.io\/\">Atom<\/a>, and I currently use <a href=\"https:\/\/eclipse.org\/\">Eclipse<\/a> for Java development.<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 20 Dec 2015 01:00:43 +0000","created_by":1,"updated_at":"Tue, 20 Dec 2016 13:50:12 +0000","updated_by":1,"published_at":"Sun, 20 Dec 2015 01:00:43 +0000","published_by":1},{"id":9,"title":"Google Drive as a collaboration tool","slug":"google-drive-as-a-collaboration-tool","markdown":"\n<del>Smart<\/del>\u00c2\u00a0Most developers use some sort of version control, either through full-blown corporate systems, or the super amazing tool Git, paired with the equally amazing online repository system, Github. Being a novice developer, I have yet to start out with either of the two technologies; while I plan on doing so soon, I wanted to share my experiences with using [Google Drive](http:\/\/drive.google.com) as a collaboration and version control system, especially for code projects.\n\nGoogle Drive has come a long way since it\u2019s first incarnation as Google Docs. There\u2019s an amazing built-in revisions tool, one that I use nearly all the time, that can be acccessed from a simple right-click on a selected folder. In it, you can compare numerous revisions (just like you\u2019d expect), and easily restore older versions of a document or file. It\u2019s a lot simpler than Github, and achieves what I think to be the primary purpose: simple, quick, version control.\n\nGoogle Drive is very easy for novice devs, or even **non-devs** to use, which makes it an ideal choice for any form of collaboration. Drive is also highly extendable with apps, so an app like [Butt 9](http:\/\/c9.io) can come in very handy when a quick fix is needed for a particular piece of code.\n\nDrive can also be used to host your files on a server, so if you have a website you want to test, you can use Google Drive for that too! All you have to is navigate to a URL formatted like so: `http:\/\/googledrive.com\/host\/[FOLDER_ID_HERE]`\n\n> The folder ID can be found in the Drive web app by navigating to the folder, and then taking the alpha-numeric string that comes after `#folder` in the URL.\n\nYou can even beautify the URL through services like [gdriv.es](http:\/\/gdriv.es), so you\u2019ll end up with a much easier to remember URL to access your site. There are also ways to link up files hosted on Drive to a custom domain name if you have one, making the service all the more plausible for actual use. Drive is **extremely** handy for initial development, and even for hosting small-scale sites.\n\nThere\u2019s much more about Google Drive I\u2019ve yet to discuss, but most of those features are worth discovering for yourself rather than talking about them in a blog post. Try it out, and see if it works for you business\/school\/whatever.\n\n\n","html":"<p><del>Smart<\/del>\u00a0Most developers use some sort of version control, either through full-blown corporate systems, or the super amazing tool Git, paired with the equally amazing online repository system, Github. Being a novice developer, I have yet to start out with either of the two technologies; while I plan on doing so soon, I wanted to share my experiences with using <a href=\"http:\/\/drive.google.com\">Google Drive<\/a> as a collaboration and version control system, especially for code projects.<br \/>\n<!--more--><\/p>\n<p>Google Drive has come a long way since it&#8217;s first incarnation as Google Docs. There&#8217;s an amazing built-in revisions tool, one that I use nearly all the time, that can be acccessed from a simple right-click on a selected folder. In it, you can compare numerous revisions (just like you&#8217;d expect), and easily restore older versions of a document or file. It&#8217;s a lot simpler than Github, and achieves what I think to be the primary purpose: simple, quick, version control.<\/p>\n<p>Google Drive is very easy for novice devs, or even <strong>non-devs<\/strong> to use, which makes it an ideal choice for any form of collaboration. Drive is also highly extendable with apps, so an app like <a href=\"http:\/\/c9.io\">Butt 9<\/a> can come in very handy when a quick fix is needed for a particular piece of code.<\/p>\n<p>Drive can also be used to host your files on a server, so if you have a website you want to test, you can use Google Drive for that too! All you have to is navigate to a URL formatted like so: <code>http:\/\/googledrive.com\/host\/[FOLDER_ID_HERE]<\/code><\/p>\n<blockquote><p>The folder ID can be found in the Drive web app by navigating to the folder, and then taking the alpha-numeric string that comes after <code>#folder<\/code> in the URL.<\/p><\/blockquote>\n<p>You can even beautify the URL through services like <a href=\"http:\/\/gdriv.es\">gdriv.es<\/a>, so you&#8217;ll end up with a much easier to remember URL to access your site. There are also ways to link up files hosted on Drive to a custom domain name if you have one, making the service all the more plausible for actual use. Drive is <strong>extremely<\/strong> handy for initial development, and even for hosting small-scale sites.<\/p>\n<p>There&#8217;s much more about Google Drive I&#8217;ve yet to discuss, but most of those features are worth discovering for yourself rather than talking about them in a blog post. Try it out, and see if it works for you business\/school\/whatever.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 20 Dec 2015 20:53:09 +0000","created_by":1,"updated_at":"Thu, 24 Dec 2015 00:33:33 +0000","updated_by":1,"published_at":"Sun, 20 Dec 2015 20:53:09 +0000","published_by":1},{"id":18,"title":"Projects","slug":"projects","markdown":"\nThroughout my short-lived programming career, I\u2019ve been lucky to be part of several cool projects.\u00c2\u00a0Check out a few snippets of my work (or just go to my [Github](http:\/\/github.com\/jkayani) directly):\n\n### [Candidata: The USAPI (2016)](http:\/\/candidata.herokuapp.com\/)\n\n![candidata-the-usapi](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Candidata-the-USAPI-300x271.png)\n\nThis is a website aimed to educate American voters, based solely off the facts. Created during Hack NC 2016, the site allows a user to choose an issue that\u2019s important to them, and for each candidate, analyze both the truthfulness of statements they\u2019ve made on the issue, and contributions they\u2019ve received from industries relevant to the particular issue. Data is retrieved from [Politifact](http:\/\/static.politifact.com\/api\/doc.html), [Open Secrets](https:\/\/www.opensecrets.org\/resources\/create\/api_doc.php), and [Five Thirty Eight](http:\/\/fivethirtyeight.com). This project won our team $500 from Infusion, one of Hack NC\u2019s corporate sponsors.\n\n### [Science of Software REU (2016): Why is search so darn hard?](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Poster-Presentation.pdf)\n\n[![poster_screenshot](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931-300x225.png)](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931.png)\n\nDuring Summer 2016, I had the opportunity to participate in the 2016 Science of Software REU (Research Experience for Undergraduates) at NC State University. During the summer, I continued work on a data collecting tool (in the form of a Google Chrome browser extension) and ultimately ran a brief preliminary pilot study with the tool, presenting the methodology at a research symposium.\n\n### [Resumate: Automating your Resume (2015)](https:\/\/github.com\/jkayani\/Resumate)\n\n![resumate](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/resumate-1-300x220.png)\n\n\u00a0\n\nResumate is a a resume-building utility to help recent graduates get jobs. It allows for a user to create and maintain a resume in JSON format, apply for jobs in both the public and private sector (for the United States), and ace the interview with useful tips & tricks. It was built with HTML, JavaScript (including jQuery) and CSS, and distributed in a Windows form designed in Visual Studio. Written for the 2015 NCTSA (North Carolina Technology Student Association) competition, it won 2nd place in the state!\n\n### [Wordnance: Written for Writers\u00c2\u00a0(2014)](https:\/\/github.com\/ScipioWarrior\/Wordnance)\n\n![wordnance](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/wordnance-1-300x284.png)\n\n\u00a0\n\nWordnance is an HTML application developed for writers, allowing them to input their essays and literary pieces, and be given a word-frequency list, all in the spirit of improving the diction in the piece. A synonym-finding service was also built-in, provided by an external API. \u00c2\u00a0It features both a web app version, running as an\u00c2\u00a0HTML file, and an HTA (HTML Application) version for Windows users, which is designed to run as a stand-alone executable. Written for the 2014 NCTSA (North Carolina Technology Student Association) competition, it won 1st place in the state!\n\n### [SavoyMusic.net (2013)](http:\/\/savoymusic.net)\n\n![Home _ SavoyMusic.net](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Home-_-SavoyMusic.net_-300x263.png)\n\nWorking with a music director at a local church, I was able to redesign and rebuild his personal website into a WordPress powered blog, allowing him to control and modify his site without any knowledge of web development.\n\n\n","html":"<p>Throughout my short-lived programming career, I&#8217;ve been lucky to be part of several cool projects.\u00a0Check out a few snippets of my work (or just go to my <a href=\"http:\/\/github.com\/jkayani\">Github<\/a> directly):<\/p>\n<h3><a href=\"http:\/\/candidata.herokuapp.com\/\">Candidata: The USAPI (2016)<\/a><\/h3>\n<p><img class=\"alignnone size-medium wp-image-131\" src=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Candidata-the-USAPI-300x271.png\" alt=\"candidata-the-usapi\" width=\"300\" height=\"271\" srcset=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Candidata-the-USAPI-300x271.png 300w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Candidata-the-USAPI-768x694.png 768w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Candidata-the-USAPI-1024x925.png 1024w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Candidata-the-USAPI.png 1380w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/p>\n<p>This is a website aimed to educate American voters, based solely off the facts. Created during Hack NC 2016, the site allows a user to choose an issue that&#8217;s important to them, and for each candidate, analyze both the truthfulness of statements they&#8217;ve made on the issue, and contributions they&#8217;ve received from industries relevant to the particular issue. Data is retrieved from <a href=\"http:\/\/static.politifact.com\/api\/doc.html\">Politifact<\/a>, <a href=\"https:\/\/www.opensecrets.org\/resources\/create\/api_doc.php\">Open Secrets<\/a>, and <a href=\"http:\/\/fivethirtyeight.com\">Five Thirty Eight<\/a>. This project won our team $500 from Infusion, one of Hack NC&#8217;s corporate sponsors.<\/p>\n<h3><a href=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Poster-Presentation.pdf\" target=\"_blank\">Science of Software REU (2016): Why is search so darn hard?<\/a><\/h3>\n<p><a href=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931.png\"><img class=\"alignnone wp-image-110 size-medium\" src=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931-300x225.png\" alt=\"poster_screenshot\" width=\"300\" height=\"225\" srcset=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931-300x225.png 300w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931-768x575.png 768w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931-1024x767.png 1024w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Screenshot_20161016_012931.png 1179w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<p>During Summer 2016, I had the opportunity to participate in the 2016 Science of Software REU (Research Experience for Undergraduates) at NC State University. During the summer, I continued work on a data collecting tool (in the form of a Google Chrome browser extension) and ultimately ran a brief preliminary pilot study with the tool, presenting the methodology at a research symposium.<\/p>\n<h3><a href=\"https:\/\/github.com\/jkayani\/Resumate\">Resumate: Automating your Resume (2015)<\/a><\/h3>\n<p><img class=\"size-medium wp-image-46 aligncenter\" src=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/resumate-1-300x220.png\" alt=\"resumate\" width=\"300\" height=\"220\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>Resumate is a a resume-building utility to help recent graduates get jobs. It allows for a user to create and maintain a resume in JSON format, apply for jobs in both the public and private sector (for the United States), and ace the interview with useful tips &amp; tricks. It was built with HTML, JavaScript (including jQuery) and CSS, and distributed in a Windows form designed in Visual Studio. Written for the 2015 NCTSA (North Carolina Technology Student Association) competition, it won 2nd place in the state!<\/p>\n<h3><a href=\"https:\/\/github.com\/ScipioWarrior\/Wordnance\">Wordnance: Written for Writers\u00a0(2014)<\/a><\/h3>\n<p><img class=\"size-medium wp-image-45 aligncenter\" src=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/wordnance-1-300x284.png\" alt=\"wordnance\" width=\"300\" height=\"284\" srcset=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/wordnance-1-300x284.png 300w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/wordnance-1.png 757w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>Wordnance is an HTML application developed for writers, allowing them to input their essays and literary pieces, and be given a word-frequency list, all in the spirit of improving the diction in the piece. A synonym-finding service was also built-in, provided by an external API. \u00a0It features both a web app version, running as an\u00a0HTML file, and an HTA (HTML Application) version for Windows users, which is designed to run as a stand-alone executable. Written for the 2014 NCTSA (North Carolina Technology Student Association) competition, it won 1st place in the state!<\/p>\n<h3><a href=\"http:\/\/savoymusic.net\">SavoyMusic.net (2013)<\/a><\/h3>\n<p><img class=\"size-medium wp-image-62 aligncenter\" src=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Home-_-SavoyMusic.net_-300x263.png\" alt=\"Home _ SavoyMusic.net\" width=\"300\" height=\"263\" srcset=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Home-_-SavoyMusic.net_-300x263.png 300w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Home-_-SavoyMusic.net_-768x673.png 768w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/Home-_-SavoyMusic.net_-1024x897.png 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/p>\n<p>Working with a music director at a local church, I was able to redesign and rebuild his personal website into a WordPress powered blog, allowing him to control and modify his site without any knowledge of web development.<\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 21 Dec 2015 02:44:25 +0000","created_by":1,"updated_at":"Tue, 20 Dec 2016 13:44:30 +0000","updated_by":1,"published_at":"Mon, 21 Dec 2015 02:44:25 +0000","published_by":1},{"id":33,"title":"Migrating from Jekyll to WordPress","slug":"migrating-from-jekyll-to-wordpress","markdown":"\nSo recently, I decided to resurrect my blog. It was built on top of a tool called Jekyll, which is a static website generator, written in Ruby. It essentially worked like WordPress (with its own famous \u201cloop\u201d),\u00c2\u00a0with page\/post templates written in HTML and Liquid (a templating engine), and pages\/posts themselves written in Markdown. You\u2019d simply run a build command, and Jekyll would spit out a full website, ready for upload to a server.\n\nIt worked great for the short period I was into blogging. The downsides were that I could only blog from the computer I had Jekyll completely setup on, and it required a Linux environment to work painlessly (Windows just didn\u2019t work for me). When I decided to pick up blogging for me, I wanted to be able to blog from any computer, preferably through a web interface. Given that I had the most experience with WordPress, I figured I\u2019d try switching over.\n\nMan \u2013 it was **easy**! For the most part, anytime I saw a Liquid tag that meant something for Jekyll (something like `{{ page.title }}`, I\u2019d just replace it with the WordPress\/PHP equivalent. Once all my templates were encapsulated in PHP tags, and all the files were renamed so that WordPress would recognize them, I was 90% done. Just the typical bugs to be ironed out, is all.\n\nIt certainly helped that I was migrating from Jekyll to WordPress \u2013 had it been the reverse, and I was reliant on widgets and plugins, I\u2019d probably be stuck pretty early on.\n\n\n","html":"<p>So recently, I decided to resurrect my blog. It was built on top of a tool called Jekyll, which is a static website generator, written in Ruby. It essentially worked like WordPress (with its own famous &#8220;loop&#8221;),\u00a0with page\/post templates written in HTML and Liquid (a templating engine), and pages\/posts themselves written in Markdown. You&#8217;d simply run a build command, and Jekyll would spit out a full website, ready for upload to a server.<br \/>\n<!--more--><\/p>\n<p>It worked great for the short period I was into blogging. The downsides were that I could only blog from the computer I had Jekyll completely setup on, and it required a Linux environment to work painlessly (Windows just didn&#8217;t work for me). When I decided to pick up blogging for me, I wanted to be able to blog from any computer, preferably through a web interface. Given that I had the most experience with WordPress, I figured I&#8217;d try switching over.<\/p>\n<p>Man &#8211; it was <strong>easy<\/strong>! For the most part, anytime I saw a Liquid tag that meant something for Jekyll (something like <code>{{ page.title }}<\/code>, I&#8217;d just replace it with the WordPress\/PHP equivalent. Once all my templates were encapsulated in PHP tags, and all the files were renamed so that WordPress would recognize them, I was 90% done. Just the typical bugs to be ironed out, is all.<\/p>\n<p>It certainly helped that I was migrating from Jekyll to WordPress &#8211; had it been the reverse, and I was reliant on widgets and plugins, I&#8217;d probably be stuck pretty early on.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 21 Dec 2015 19:18:45 +0000","created_by":1,"updated_at":"Mon, 21 Dec 2015 19:18:45 +0000","updated_by":1,"published_at":"Mon, 21 Dec 2015 19:18:45 +0000","published_by":1},{"id":38,"title":"My Hack NC experience","slug":"my-hack-nc-experience","markdown":"\nA few months ago, I attended my first hackathon: Hack NC, a statewide \u201chacking\u201d competition sponsored by MLH (Major League Hacking), held at the UNC Chapel Hill campus. The whole event was filled with conferences\/talks, networking and corporate PR stuff,\u00c2\u00a0and free food, all with the pretense of developing *something cool*\u00c2\u00a0within 24 hours.\n\nA few friends from high school and I decided to form a team, and immediately we carved out a space in an available lecture hall and got at it; a bunch of wireframes\/sketches later, we had a basic idea of what we wanted to do. The premise was simple: create a web app that let people meet up for meals, a problem we saw worthy of a technical solution \u2013 given that we were all college students. Of course, something like this requires a full setup: a database to handle accounts and users, obvious front end UI and logic, and something server side to glue the two together. Hack NC graciously gave us all we\u2019d ever need, including a domain from Namecheap, and hosting\/services from Amazon Web Services \u2013 unfortunately, we hadn\u2019t ever used any of this tech before.\n\nIn retrospect, we clearly bit off way more than we could chew, and within a few hours we were well aware of it. Something as simple as \u201cSign in with Google\u201d was a feature I worked for hours on implementing, feeling like a complete knucklehead at the very end when I realized how dead simple it was. Around 2 AM Sunday, we had a pretty UI, and limited log-in functionality to show for a days work. Oh, and projects had to be turned in 10 AM Sunday. Shoot.\n\nI wouldn\u2019t dare call it a waste of time though; I got a bunch of swag (read: stickers) for my laptop, a coupon for a free domain with Namecheap (you\u2019re looking at it right now), and a lot of experience in working in a hackathon environment; I can\u2019t recall having ~ 15 Chrome tabs of AWS\/Python documentation open in any other setting.\u00c2\u00a0I had a blast, and can\u2019t wait to do it again next year!\n\n\n","html":"<p>A few months ago, I attended my first hackathon: Hack NC, a statewide &#8220;hacking&#8221; competition sponsored by MLH (Major League Hacking), held at the UNC Chapel Hill campus. The whole event was filled with conferences\/talks, networking and corporate PR stuff,\u00a0and free food, all with the pretense of developing <em>something cool<\/em>\u00a0within 24 hours.<\/p>\n<p><!--more--><\/p>\n<p>A few friends from high school and I decided to form a team, and immediately we carved out a space in an available lecture hall and got at it; a bunch of wireframes\/sketches later, we had a basic idea of what we wanted to do. The premise was simple: create a web app that let people meet up for meals, a problem we saw worthy of a technical solution &#8211; given that we were all college students. Of course, something like this requires a full setup: a database to handle accounts and users, obvious front end UI and logic, and something server side to glue the two together. Hack NC graciously gave us all we&#8217;d ever need, including a domain from Namecheap, and hosting\/services from Amazon Web Services &#8211; unfortunately, we hadn&#8217;t ever used any of this tech before.<\/p>\n<p>In retrospect, we clearly bit off way more than we could chew, and within a few hours we were well aware of it. Something as simple as &#8220;Sign in with Google&#8221; was a feature I worked for hours on implementing, feeling like a complete knucklehead at the very end when I realized how dead simple it was. Around 2 AM Sunday, we had a pretty UI, and limited log-in functionality to show for a days work. Oh, and projects had to be turned in 10 AM Sunday. Shoot.<\/p>\n<p>I wouldn&#8217;t dare call it a waste of time though; I got a bunch of swag (read: stickers) for my laptop, a coupon for a free domain with Namecheap (you&#8217;re looking at it right now), and a lot of experience in working in a hackathon environment; I can&#8217;t recall having ~ 15 Chrome tabs of AWS\/Python documentation open in any other setting.\u00a0I had a blast, and can&#8217;t wait to do it again next year!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 24 Dec 2015 19:00:12 +0000","created_by":1,"updated_at":"Thu, 24 Dec 2015 19:24:31 +0000","updated_by":1,"published_at":"Thu, 24 Dec 2015 19:00:12 +0000","published_by":1},{"id":50,"title":"Contributing to open source for the first time","slug":"contributing-to-open-source-for-the-first-time","markdown":"\nOver the summer \u2013 my last one before starting university \u2013 I was looking for a project to get into. I had a Github account, and I\u2019d worked on a bunch of small personal projects before, but never had I contributed to someone else\u2019s work. It just seemed too hard; how could I contribute anything of value to a project I didn\u2019t create?\n\nThat same summer, I also rediscovered my interest in Google Chrome browser extensions. I spend a lot of time in the browser, and thought it\u2019d be cool to develop an extension of my own, something to \u201citch my own scratch\u201d. I found it even cooler when I realized you could just whip \u2019em up with good ol\u2019 HTML\/CSS\/JavaScript. So hey, why not just contribute to a Chrome extension project somewhere?\n\n> If you\u2019re interesting in developing your own Chrome extensions (they\u2019re really cool), I\u2019d simply head over to\u00c2\u00a0[https:\/\/developer.chrome.com\/extensions\/getstarted](https:\/\/developer.chrome.com\/extensions\/getstarted) and hack away!\n\n\u00a0\n\nOne of my favorite Chrome extensions is [Awesome Screenshot](https:\/\/chrome.google.com\/webstore\/detail\/awesome-screenshot-minus\/bnophbnknjcjnbadhhkciahanapffepm?hl=en), a handy tool for, as you guessed it, taking screenshots. I take a bunch of screenshots when browsing the web; sometimes it\u2019s for amusement and sharing, other times to explain a problem better, since a picture tells a thousand words. I was using Awesome Screenshot, and realized there was no easy way to save screenshots to Google Drive, the cloud platform of choice for me. A quick Google search pulled up the extensive Drive API, and I realized I could probably just hack this together myself. Here goes.\n\n\u00a0\n\nAfter an hour or two, I had a working product, but one that didn\u2019t fit my needs. The biggest issue, for me, was folder navigation \u2013 say I wanted to save a screenshot in the \u201cScreenshots\u201d folder nested inside the \u201cMy Drive\u201d folder; how would I do that? It became a bit of a debacle in terms of both UI and logic to implement; eventually, I got things working, and looking back on it, realized I basically just implemented the idea of a file path. If only I\u2019d realized the problem I was dealing with had only been solved. Regardless, after bit of a polishing, I had a hacked together feature *I was**proud of*.\n\n\u00a0\n\n<div class=\"wp-caption aligncenter\" id=\"attachment_51\" style=\"width: 710px\">![Eureka - I can traverse the file hierarchy! ](http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/screenshot2-1024x499.png)Eureka \u2013 I can traverse the file hierarchy!\n\n<\/div>\u00a0\n\nRemember how I wanted to have something to put on Github? Well it turns out, Awesome Screenshot was hosted on there, and the developer was happily accepting contributions. So, I downloaded the Github client for Windows, read up on the general rules\/guidelines to requesting a pull request, and tried my luck. I\u2019m happy to say that after a revision or two (mainly code style), my first pull request was accepted. I\u2019d done it \u2013 I contributed to open source, all from scratching my own itch!\n\n\u00a0\n\n\n","html":"<p>Over the summer &#8211; my last one before starting university &#8211; I was looking for a project to get into. I had a Github account, and I&#8217;d worked on a bunch of small personal projects before, but never had I contributed to someone else&#8217;s work. It just seemed too hard; how could I contribute anything of value to a project I didn&#8217;t create?<\/p>\n<p><!--more--><\/p>\n<p>That same summer, I also rediscovered my interest in Google Chrome browser extensions. I spend a lot of time in the browser, and thought it&#8217;d be cool to develop an extension of my own, something to &#8220;itch my own scratch&#8221;. I found it even cooler when I realized you could just whip &#8217;em up with good ol&#8217; HTML\/CSS\/JavaScript. So hey, why not just contribute to a Chrome extension project somewhere?<\/p>\n<blockquote><p>If you&#8217;re interesting in developing your own Chrome extensions (they&#8217;re really cool), I&#8217;d simply head over to\u00a0<a href=\"https:\/\/developer.chrome.com\/extensions\/getstarted\">https:\/\/developer.chrome.com\/extensions\/getstarted<\/a> and hack away!<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<p>One of my favorite Chrome extensions is <a href=\"https:\/\/chrome.google.com\/webstore\/detail\/awesome-screenshot-minus\/bnophbnknjcjnbadhhkciahanapffepm?hl=en\">Awesome Screenshot<\/a>, a handy tool for, as you guessed it, taking screenshots. I take a bunch of screenshots when browsing the web; sometimes it&#8217;s for amusement and sharing, other times to explain a problem better, since a picture tells a thousand words. I was using Awesome Screenshot, and realized there was no easy way to save screenshots to Google Drive, the cloud platform of choice for me. A quick Google search pulled up the extensive Drive API, and I realized I could probably just hack this together myself. Here goes.<\/p>\n<p>&nbsp;<\/p>\n<p>After an hour or two, I had a working product, but one that didn&#8217;t fit my needs. The biggest issue, for me, was folder navigation &#8211; say I wanted to save a screenshot in the &#8220;Screenshots&#8221; folder nested inside the &#8220;My Drive&#8221; folder; how would I do that? It became a bit of a debacle in terms of both UI and logic to implement; eventually, I got things working, and looking back on it, realized I basically just implemented the idea of a file path. If only I&#8217;d realized the problem I was dealing with had only been solved. Regardless, after bit of a polishing, I had a hacked together feature <em>I was<\/em> <em>proud of<\/em>.<\/p>\n<p>&nbsp;<\/p>\n<div id=\"attachment_51\" style=\"width: 710px\" class=\"wp-caption aligncenter\"><img class=\"wp-image-51\" src=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/screenshot2-1024x499.png\" alt=\"Eureka - I can traverse the file hierarchy! \" width=\"700\" height=\"341\" srcset=\"http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/screenshot2-1024x499.png 1024w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/screenshot2-300x146.png 300w, http:\/\/joshkayani.me\/wp-content\/uploads\/2015\/12\/screenshot2-768x374.png 768w\" sizes=\"(max-width: 700px) 100vw, 700px\" \/><p class=\"wp-caption-text\">Eureka &#8211; I can traverse the file hierarchy!<\/p><\/div>\n<p>&nbsp;<\/p>\n<p>Remember how I wanted to have something to put on Github? Well it turns out, Awesome Screenshot was hosted on there, and the developer was happily accepting contributions. So, I downloaded the Github client for Windows, read up on the general rules\/guidelines to requesting a pull request, and tried my luck. I&#8217;m happy to say that after a revision or two (mainly code style), my first pull request was accepted. I&#8217;d done it &#8211; I contributed to open source, all from scratching my own itch!<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 26 Dec 2015 10:00:32 +0000","created_by":1,"updated_at":"Fri, 25 Dec 2015 23:41:29 +0000","updated_by":1,"published_at":"Sat, 26 Dec 2015 10:00:32 +0000","published_by":1},{"id":69,"title":"Joining a research project","slug":"joining-a-research-project","markdown":"\nThis past month, I was graciously given the opportunity to work on an undergraduate research project in NC State\u2019s CSC (Computer Science) department! The project is part of an [REU (Research Experience for Undergraduates)](https:\/\/www.nsf.gov\/crssprgm\/reu\/), which is an initiative sponsored by the National Science Foundation to get undergrads into research. It\u2019s pretty surprising (at least to me), that I was able to start research as a freshman, but it\u2019s a lot more accessible than I\u2019d previously thought!\n\nEvery semester at NC State, professors and researchers in the Computer Science department hold a series of \u201cLightning Talks\u201d; these are just brief presentations about their research, used to pique the interest of potential undergrads like myself. I figured I\u2019d go this semester, thinking\u00c2\u00a0that the worst case scenario was a wasted hour of my time (free food was included).\n\n\u00a0\n\nLong story short, I met with a professor working on the topic of \u201ccode search\u201d; essentially, what developers do whenever they\u2019re stuck on a problem, or need to know more about an API. The project aims to study how developers search for code and analyze behaviors behind searches, not only in an effort to improve existing code search tools, but perhaps even predict the success of searches!\n\n\u00a0\n\n> If the topic interests you, the professor I\u2019m working with co-authored a study on the same subject here:\u00c2\u00a0[http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/43835.pdf](http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/43835.pdf)\n\n\u00a0\n\nSo what am I doing? Currently, I\u2019m developing a Chrome browser extension that would be employed to collect data on code searches; the extension logs searches to a server, recording different pieces of information depending on the website being searched; for example, the position of a search result and it\u2019s associated query on Google would be recorded, whereas navigating directly to a website would just have it\u2019s URL. Ideally, the tool would be distributed to developers in another phase of the project, where the actual data analysis would be conducted.\n\n\u00a0\n\nI\u2019m really enjoying the work I\u2019m doing so far, and can\u2019t wait to see it an action, used to advance the field as a whole; it\u2019s a great time to be in college, and a great time to contribute to research!\n\n\n","html":"<p>This past month, I was graciously given the opportunity to work on an undergraduate research project in NC State&#8217;s CSC (Computer Science) department! The project is part of an <a href=\"https:\/\/www.nsf.gov\/crssprgm\/reu\/\">REU (Research Experience for Undergraduates)<\/a>, which is an initiative sponsored by the National Science Foundation to get undergrads into research. It&#8217;s pretty surprising (at least to me), that I was able to start research as a freshman, but it&#8217;s a lot more accessible than I&#8217;d previously thought!<\/p>\n<p><!--more--><\/p>\n<p>Every semester at NC State, professors and researchers in the Computer Science department hold a series of &#8220;Lightning Talks&#8221;; these are just brief presentations about their research, used to pique the interest of potential undergrads like myself. I figured I&#8217;d go this semester, thinking\u00a0that the worst case scenario was a wasted hour of my time (free food was included).<\/p>\n<p>&nbsp;<\/p>\n<p>Long story short, I met with a professor working on the topic of &#8220;code search&#8221;; essentially, what developers do whenever they&#8217;re stuck on a problem, or need to know more about an API. The project aims to study how developers search for code and analyze behaviors behind searches, not only in an effort to improve existing code search tools, but perhaps even predict the success of searches!<\/p>\n<p>&nbsp;<\/p>\n<blockquote><p>If the topic interests you, the professor I&#8217;m working with co-authored a study on the same subject here:\u00a0<a href=\"http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/43835.pdf\">http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/43835.pdf<\/a><\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<p>So what am I doing? Currently, I&#8217;m developing a Chrome browser extension that would be employed to collect data on code searches; the extension logs searches to a server, recording different pieces of information depending on the website being searched; for example, the position of a search result and it&#8217;s associated query on Google would be recorded, whereas navigating directly to a website would just have it&#8217;s URL. Ideally, the tool would be distributed to developers in another phase of the project, where the actual data analysis would be conducted.<\/p>\n<p>&nbsp;<\/p>\n<p>I&#8217;m really enjoying the work I&#8217;m doing so far, and can&#8217;t wait to see it an action, used to advance the field as a whole; it&#8217;s a great time to be in college, and a great time to contribute to research!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 01 Feb 2016 00:12:44 +0000","created_by":1,"updated_at":"Mon, 01 Feb 2016 00:13:04 +0000","updated_by":1,"published_at":"Mon, 01 Feb 2016 00:12:44 +0000","published_by":1},{"id":64,"title":"Efficient documentation in Eclipse","slug":"efficient-documentation-in-eclipse","markdown":"\nMany Java developers, budding and veteran, use the Eclipse IDE \u2013 heck, I even used it in my AP Computer Science class in high school (even though it was technically taught with\u00c2\u00a0the BlueJ IDE).\u00c2\u00a0In the course, we were required to have documentation on the top of any Java classes we wrote in the following format:\n\n```\n<br><\/br>\nName```\n\nDate\n\nAssignment Name\n\nDescription\n\nDifficulties\n\nWhat was learned\n\n  \n From looking at this, this seems like something that can be largely automated, right? The user\u2019s name is probably stored somewhere, the date can be retrieved from the computer, and the assignment name is probably similar to the Eclipse project name \u2013 and that\u2019s exactly what I did.\n\nEclipse offers a feature called \u201cCode Templates\u201d, which essentially allow you to create a template for any code and comments in your source. Template variables, such as the date or project name, can be accessed in this format: `${variableName}`.\n\nSo, all I had to do was edit the comment templates for files (accessed from Preferences > Java > Code Style > Code Templates), inserting `${name}`, `${date}`, and `${project_name}` variables in my comments, along with the text, giving me an easy \u201cform\u201d to fill out on the top of each new source file I created.\n\nYou might find it useful to insert a TODO at the top of your source files for remembering documentation tasks like descriptions for classes, etc.\n\n\n","html":"<p>Many Java developers, budding and veteran, use the Eclipse IDE &#8211; heck, I even used it in my AP Computer Science class in high school (even though it was technically taught with\u00a0the BlueJ IDE).\u00a0In the course, we were required to have documentation on the top of any Java classes we wrote in the following format:<\/p>\n<p><!--more--><\/p>\n<p><code><br \/>\nName<\/p>\n<p>Date<\/p>\n<p>Assignment Name<\/p>\n<p>Description<\/p>\n<p>Difficulties<\/p>\n<p>What was learned<\/p>\n<p><\/code><br \/>\nFrom looking at this, this seems like something that can be largely automated, right? The user&#8217;s name is probably stored somewhere, the date can be retrieved from the computer, and the assignment name is probably similar to the Eclipse project name &#8211; and that&#8217;s exactly what I did.<\/p>\n<p>Eclipse offers a feature called &#8220;Code Templates&#8221;, which essentially allow you to create a template for any code and comments in your source. Template variables, such as the date or project name, can be accessed in this format: <code>${variableName}<\/code>. <\/p>\n<p>So, all I had to do was edit the comment templates for files (accessed from Preferences &gt; Java &gt; Code Style &gt; Code Templates), inserting <code>${name}<\/code>, <code>${date}<\/code>, and <code>${project_name}<\/code> variables in my comments, along with the text, giving me an easy &#8220;form&#8221; to fill out on the top of each new source file I created.<\/p>\n<p>You might find it useful to insert a TODO at the top of your source files for remembering documentation tasks like descriptions for classes, etc.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 24 May 2016 18:21:51 +0000","created_by":1,"updated_at":"Tue, 24 May 2016 18:23:19 +0000","updated_by":1,"published_at":"Tue, 24 May 2016 18:21:51 +0000","published_by":1},{"id":79,"title":"Research: An Update","slug":"research-an-update","markdown":"\nThe last time I mentioned research, I was starting an REU during the Spring 2016 semester at NC State. Now, it\u2019s Summer 2016, and I\u2019m still here \u2013 I was given the opportunity to continue working on my project as part of the [Science of Software REU](https:\/\/github.com\/REU-SOS\/SOS).\n\nThe work has been challenging, but quite rewarding. Admittedly, I joined the project expecting to just be a programmer writing a Chrome extension, but I\u2019ve learned a lot about software engineering research and academic computer science, alongside working with asynchronous JavaScript (the entire Chrome extension API) and deploying Flask applications (the backend). Looking back, it\u2019s been an eclectic mix of academia and system administration!\n\nBeing able to work with intelligent faculty and PhD students is quite invaluable; they\u2019re not only intelligent and wise, but they make for great friends too.\n\nBy the end of the summer, I plan\u00c2\u00a0to have my Chrome extension finalized with the necessary IRB paperwork sent off \u2013 this way, we can begin a pilot study with actual developers using the extension, and come closer to collecting data we can write a paper on!\n\n\n","html":"<p>The last time I mentioned research, I was starting an REU during the Spring 2016 semester at NC State. Now, it&#8217;s Summer 2016, and I&#8217;m still here &#8211; I was given the opportunity to continue working on my project as part of the <a href=\"https:\/\/github.com\/REU-SOS\/SOS\">Science of Software REU<\/a>.<\/p>\n<p>The work has been challenging, but quite rewarding. Admittedly, I joined the project expecting to just be a programmer writing a Chrome extension, but I&#8217;ve learned a lot about software engineering research and academic computer science, alongside working with asynchronous JavaScript (the entire Chrome extension API) and deploying Flask applications (the backend). Looking back, it&#8217;s been an eclectic mix of academia and system administration!<\/p>\n<p>Being able to work with intelligent faculty and PhD students is quite invaluable; they&#8217;re not only intelligent and wise, but they make for great friends too.<\/p>\n<p>By the end of the summer, I plan\u00a0to have my Chrome extension finalized with the necessary IRB paperwork sent off &#8211; this way, we can begin a pilot study with actual developers using the extension, and come closer to collecting data we can write a paper on!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 24 Jun 2016 17:49:56 +0000","created_by":1,"updated_at":"Fri, 24 Jun 2016 17:49:56 +0000","updated_by":1,"published_at":"Fri, 24 Jun 2016 17:49:56 +0000","published_by":1},{"id":95,"title":"Undergrad Stuff","slug":"temp-slug-9","markdown":"\nAs an [undergrad at NC State](https:\/\/www.csc.ncsu.edu\/academics\/undergrad\/semester.php), I\u2019ve done a lot of stuff. Here it is, in all it\u2019s glory:\n\n### CSC 216\n\nThis is the second Java course for the major; it basically goes further in depth with object oriented design (abstract classes, interfaces, inheritance and composition, etc.) and introduces basic data structure concepts (array lists, linked lists, stacks and queues). It\u2019s project based, so I ended up working on 3 main projects throughout:\n\n\u00a0\n\n\n","html":"<p>As an <a href=\"https:\/\/www.csc.ncsu.edu\/academics\/undergrad\/semester.php\">undergrad at NC State<\/a>, I&#8217;ve done a lot of stuff. Here it is, in all it&#8217;s glory:<\/p>\n<h3>CSC 216<\/h3>\n<p>This is the second Java course for the major; it basically goes further in depth with object oriented design (abstract classes, interfaces, inheritance and composition, etc.) and introduces basic data structure concepts (array lists, linked lists, stacks and queues). It&#8217;s project based, so I ended up working on 3 main projects throughout:<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":1,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 25 Jun 2016 00:47:59 +0000","created_by":1,"updated_at":"Sat, 25 Jun 2016 00:47:59 +0000","updated_by":1,"published_at":"","published_by":1},{"id":98,"title":"Explaining modulus to a friend","slug":"explaining-modulus-to-a-friend","markdown":"\nLast semester, a friend and I were taking Discrete Math (counting, sets, logic, etc.), and he asked me a question about how modulus worked with negative numbers. It took me a bit to come up with a good answer, and I think it provides a nice framework for understanding how that operation works as a whole, so here goes.\n\nWhen someone\u2019s asked to calculate `a`\u00c2\u00a0modulus `b`\u00c2\u00a0, they\u2019re being asked what the remainder would be when dividing `a`\u00c2\u00a0by `b`. For example, calculating `7 modulus 3`\u00c2\u00a0would be 1, since 3\u00c2\u00a0can only \u201cgo into\u201d\u00c2\u00a07\u00c2\u00a0twice, and there will be 1 left over `(7 - (3 * 2) = 1`.\n\nWe can make this a little more mathematical (it comes in handy when extending this to negative numbers): when calculating `a`\u00c2\u00a0modulus `b`, you\u2019re trying to find the value `c`\u00c2\u00a0such that `c = a - (b * k)`, where `k`\u00c2\u00a0is the largest possible integer such that `a`\u00c2\u00a0is greater than `(b * k)`. \u00c2\u00a0Again, consider calculating `7 modulus 3`: here, we\u2019re trying to find the largest `k`\u00c2\u00a0that when multiplied by 3, is still less than 7. If `k = 3`, then `(b * k)`\u00c2\u00a0equals 9, and 7\u00c2\u00a0is not greater than 9. However, if `k = 2`, then `(b * k)`\u00c2\u00a0equals 6, and 7\u00c2\u00a0is greater than 6. \u00c2\u00a0Plugging this into our equation, we find that `c = 7\u00c2\u00a0- (3 * 2)`, which means `c`\u00c2\u00a0equals 1.\n\nTo understand where that model came from, think about what divisibility means. If 2 numbers, `a`\u00c2\u00a0and `b`\u00c2\u00a0are divisible, it means that `a \/ b`\u00c2\u00a0yields no remainder; in other words, there is some integer `k`\u00c2\u00a0such that `a = (b * k)`. Using that same model, we can calculate the remainder of any division by taking `a - (b * k)`. Of course, when 2 numbers are divisible, the remainder is 0;\u00c2\u00a0additionally, when 2 numbers are **not** divisible, there is no k where `a = (b * k).\u00c2\u00a0`\n\nNow to answer the question: how does negative modulus (`-a`\u00c2\u00a0modulus `b`) work? Our model remains the same; we\u2019re still trying to find `c`\u00c2\u00a0using the equation above, and `k`\u00c2\u00a0should still be the largest possible integer so that `-a > (b * k)`. \u00c2\u00a0The key is in this last expression; for a negative integer\u00c2\u00a0`x`\u00c2\u00a0to be\u00c2\u00a0greater than another integer\u00c2\u00a0`y`, `y`\u00c2\u00a0should be negative but have a larger absolute value. For example, -1 is larger than all the integers in the range -2 to -infinity, but all those numbers have a larger absolute value than 1 (2 \u00c2\u00a0> 1, 3 > 1, \u2026 infinity > 1). This is because with negative numbers, larger absolute values mean the number gets smaller \u2013 exactly the opposite of what happens with positive numbers.\n\nTaking this into account, consider `7 modulus 3`\u00c2\u00a0versus \u00c2\u00a0\u2013`7 modulus 3`. The largest `k`\u00c2\u00a0that can be multiplied by `3`\u00c2\u00a0to be less than 7\u00c2\u00a0is `k = 2`, giving us 7`\u00c2\u00a0- (3 * 2) = 1`. But the largest `k`\u00c2\u00a0that can be multiplied by `2`\u00c2\u00a0and be less than -7\u00c2\u00a0is `k = -3`, since -7 is greater than -9 (`-3 * 3`), so our answer becomes `-7 - (-3 * 3) = -7 - (-9) = -7 + 9\u00c2\u00a0= 2`. \u00c2\u00a0From this, we can see that there is no shortcut like: calculate `a modulus b`\u00c2\u00a0and then multiply it by -1.\n\nThis is a **lot** of math to do a basic operation, so here\u2019s a shortcut. When calculating `a modulus b`, and `a`\u00c2\u00a0is positive, you can simply find the closest multiple of `b`\u00c2\u00a0that is still less than `|a|`(absolute value of `a`), call it `d`, and do `a - d`\u00c2\u00a0to get your answer. When `a`\u00c2\u00a0is negative however, you should still find the closest multiple of `b`\u00c2\u00a0that is less than `|a|`, call it `d`, but then do `a + (d + b)\u00c2\u00a0`to get your answer. This just comes from applying the above model.\n\nYou can also think of this in terms of going \u201cunder\u201d and \u201cover\u201d; with `a modulus b`, you\u2019re going \u201cunder\u201d <span style=\"font-family: monospace;\">|a|<\/span>\u00c2\u00a0to find `k`,\u00c2\u00a0and taking the difference `a - (b * k).`\u00c2\u00a0With `-a modulus b`, you\u2019re going \u201cover\u201d `|a|`\u00c2\u00a0to find `k`, and again taking\u00c2\u00a0the difference `a - (b * k)`.\n\nHopefully I managed to articulate all of that well!\n\n\n","html":"<p>Last semester, a friend and I were taking Discrete Math (counting, sets, logic, etc.), and he asked me a question about how modulus worked with negative numbers. It took me a bit to come up with a good answer, and I think it provides a nice framework for understanding how that operation works as a whole, so here goes.<\/p>\n<p><!--more--><\/p>\n<p>When someone&#8217;s asked to calculate <code>a<\/code>\u00a0modulus <code>b<\/code>\u00a0, they&#8217;re being asked what the remainder would be when dividing <code>a<\/code>\u00a0by <code>b<\/code>. For example, calculating <code>7 modulus 3<\/code>\u00a0would be 1, since 3\u00a0can only &#8220;go into&#8221;\u00a07\u00a0twice, and there will be 1 left over <code>(7 - (3 * 2) = 1<\/code>.<\/p>\n<p>We can make this a little more mathematical (it comes in handy when extending this to negative numbers): when calculating <code>a<\/code>\u00a0modulus <code>b<\/code>, you&#8217;re trying to find the value <code>c<\/code>\u00a0such that <code>c = a - (b * k)<\/code>, where <code>k<\/code>\u00a0is the largest possible integer such that <code>a<\/code>\u00a0is greater than <code>(b * k)<\/code>. \u00a0Again, consider calculating <code>7 modulus 3<\/code>: here, we&#8217;re trying to find the largest <code>k<\/code>\u00a0that when multiplied by 3, is still less than 7. If <code>k = 3<\/code>, then <code>(b * k)<\/code>\u00a0equals 9, and 7\u00a0is not greater than 9. However, if <code>k = 2<\/code>, then <code>(b * k)<\/code>\u00a0equals 6, and 7\u00a0is greater than 6. \u00a0Plugging this into our equation, we find that <code>c = 7\u00a0- (3 * 2)<\/code>, which means <code>c<\/code>\u00a0equals 1.<\/p>\n<p>To understand where that model came from, think about what divisibility means. If 2 numbers, <code>a<\/code>\u00a0and <code>b<\/code>\u00a0are divisible, it means that <code>a \/ b<\/code>\u00a0yields no remainder; in other words, there is some integer <code>k<\/code>\u00a0such that <code>a = (b * k)<\/code>. Using that same model, we can calculate the remainder of any division by taking <code>a - (b * k)<\/code>. Of course, when 2 numbers are divisible, the remainder is 0;\u00a0additionally, when 2 numbers are <strong>not<\/strong> divisible, there is no k where <code>a = (b * k).\u00a0<\/code><\/p>\n<p>Now to answer the question: how does negative modulus (<code>-a<\/code>\u00a0modulus <code>b<\/code>) work? Our model remains the same; we&#8217;re still trying to find <code>c<\/code>\u00a0using the equation above, and <code>k<\/code>\u00a0should still be the largest possible integer so that <code>-a &gt; (b * k)<\/code>. \u00a0The key is in this last expression; for a negative integer\u00a0<code>x<\/code>\u00a0to be\u00a0greater than another integer\u00a0<code>y<\/code>, <code>y<\/code>\u00a0should be negative but have a larger absolute value. For example, -1 is larger than all the integers in the range -2 to -infinity, but all those numbers have a larger absolute value than 1 (2 \u00a0&gt; 1, 3 &gt; 1, &#8230; infinity &gt; 1). This is because with negative numbers, larger absolute values mean the number gets smaller &#8211; exactly the opposite of what happens with positive numbers.<\/p>\n<p>Taking this into account, consider <code>7 modulus 3<\/code>\u00a0versus \u00a0&#8211;<code>7 modulus 3<\/code>. The largest <code>k<\/code>\u00a0that can be multiplied by <code>3<\/code>\u00a0to be less than 7\u00a0is <code>k = 2<\/code>, giving us 7<code>\u00a0- (3 * 2) = 1<\/code>. But the largest <code>k<\/code>\u00a0that can be multiplied by <code>2<\/code>\u00a0and be less than -7\u00a0is <code>k = -3<\/code>, since -7 is greater than -9 (<code>-3 * 3<\/code>), so our answer becomes <code>-7 - (-3 * 3) = -7 - (-9) = -7 + 9\u00a0= 2<\/code>. \u00a0From this, we can see that there is no shortcut like: calculate <code>a modulus b<\/code>\u00a0and then multiply it by -1.<\/p>\n<p>This is a <strong>lot<\/strong> of math to do a basic operation, so here&#8217;s a shortcut. When calculating <code>a modulus b<\/code>, and <code>a<\/code>\u00a0is positive, you can simply find the closest multiple of <code>b<\/code>\u00a0that is still less than <code>|a|<\/code>(absolute value of <code>a<\/code>), call it <code>d<\/code>, and do <code>a - d<\/code>\u00a0to get your answer. When <code>a<\/code>\u00a0is negative however, you should still find the closest multiple of <code>b<\/code>\u00a0that is less than <code>|a|<\/code>, call it <code>d<\/code>, but then do <code>a + (d + b)\u00a0<\/code>to get your answer. This just comes from applying the above model.<\/p>\n<p>You can also think of this in terms of going &#8220;under&#8221; and &#8220;over&#8221;; with <code>a modulus b<\/code>, you&#8217;re going &#8220;under&#8221; <span style=\"font-family: monospace;\">|a|<\/span>\u00a0to find <code>k<\/code>,\u00a0and taking the difference <code>a - (b * k).<\/code>\u00a0With <code>-a modulus b<\/code>, you&#8217;re going &#8220;over&#8221; <code>|a|<\/code>\u00a0to find <code>k<\/code>, and again taking\u00a0the difference <code>a - (b * k)<\/code>.<\/p>\n<p>Hopefully I managed to articulate all of that well!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 11 Jul 2016 18:28:45 +0000","created_by":1,"updated_at":"Mon, 11 Jul 2016 18:29:04 +0000","updated_by":1,"published_at":"Mon, 11 Jul 2016 18:28:45 +0000","published_by":1},{"id":117,"title":"Sidebar Text","slug":"sidebar-text","markdown":"\nHey, I\u2019m Josh Kayani, a student and fledgling computer programmer. Here, I rant and rave about tech and other topics.\n\n\n","html":"<p>Hey, I&#8217;m Josh Kayani, a student and fledgling computer programmer. Here, I rant and rave about tech and other topics.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 20 Oct 2016 00:42:05 +0000","created_by":1,"updated_at":"Thu, 20 Oct 2016 01:07:00 +0000","updated_by":1,"published_at":"Thu, 20 Oct 2016 00:42:05 +0000","published_by":1},{"id":114,"title":"5 months with Ubuntu: Some thoughts","slug":"temp-slug-12","markdown":"\nAround 5 months ago, before my summer research assignment started, I thought I\u2019d give Ubuntu Linux a spin. Sure, I\u2019d tried making the switch several times before, each time trying it in a VM for a few days, and maybe even booting off a USB to convince myself it\u2019d be worth it. Yet, every single previous attempt failed \u2013 maybe I wasn\u2019t taking it seriously enough, or maybe I just didn\u2019t want to deal with the hassle.\n\nI made the switch initially because, quite frankly, I wanted to get out of the \u201csafe\u201d Windows box \u2013 not too different from a sort of \u201cadventurous calling\u201d, a chance to learn a bit more about how computers work. Plus, it\u2019d make my research work a lot easier, though I can\u2019t say I realized it at the time. A lot of the tools I used were built for *nix machines, which pretty much means anything running macOS or a Linux distribution.\n\nThe hardest parts were by far: getting wireless\u00c2\u00a0to work (critical because my laptop only has a wireless adapter); and switching desktop environments. Fortunately, my internal\u00c2\u00a0wireless adapter (a Dell-branded Broadcom) had drivers available \u2013 of course, it would\u2019ve been way easier if I just got an Intel adapter, since those have support out of the box from the kernel. Just in case I ever have to\u00c2\u00a0recover from a crazy disaster, I still have a folder of bookmarks full of helpful forum posts, to \u201cbootstrap\u201d Ubuntu.\n\n\u00a0\n\n\n","html":"<p>Around 5 months ago, before my summer research assignment started, I thought I&#8217;d give Ubuntu Linux a spin. Sure, I&#8217;d tried making the switch several times before, each time trying it in a VM for a few days, and maybe even booting off a USB to convince myself it&#8217;d be worth it. Yet, every single previous attempt failed &#8211; maybe I wasn&#8217;t taking it seriously enough, or maybe I just didn&#8217;t want to deal with the hassle.<\/p>\n<p>I made the switch initially because, quite frankly, I wanted to get out of the &#8220;safe&#8221; Windows box &#8211; not too different from a sort of &#8220;adventurous calling&#8221;, a chance to learn a bit more about how computers work. Plus, it&#8217;d make my research work a lot easier, though I can&#8217;t say I realized it at the time. A lot of the tools I used were built for *nix machines, which pretty much means anything running macOS or a Linux distribution.<\/p>\n<p>The hardest parts were by far: getting wireless\u00a0to work (critical because my laptop only has a wireless adapter); and switching desktop environments. Fortunately, my internal\u00a0wireless adapter (a Dell-branded Broadcom) had drivers available &#8211; of course, it would&#8217;ve been way easier if I just got an Intel adapter, since those have support out of the box from the kernel. Just in case I ever have to\u00a0recover from a crazy disaster, I still have a folder of bookmarks full of helpful forum posts, to &#8220;bootstrap&#8221; Ubuntu.<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 21 Oct 2016 00:51:04 +0000","created_by":1,"updated_at":"Fri, 21 Oct 2016 00:51:04 +0000","updated_by":1,"published_at":"","published_by":1},{"id":125,"title":"Winning at Hack NC 2016","slug":"winning-at-hack-nc-2016","markdown":"\nJust like last year, the University of North Carolina at Chapel Hill and Major League Hacking teamed up to put on Hack NC 2016 \u2013 a 24 hour hackathon with the objective of building cool stuff, very fast. And, [just like last year](http:\/\/joshkayani.me\/my-hack-nc-experience\/), I went \u2013 except this time, **we won something**.\n\nI formed a team with two friends of mine, and immediately we started thinking about ideas from a political angle. It was a few months before the 2016 US Presidential election, arguably\u00c2\u00a0the most bizarre and controversial of recent history \u2013 could you really blame us? In any case, after mulling over a bunch of ideas, we discovered 3 political websites\u00c2\u00a0had API\u2019s that could give us potentially useful information:\n\n- [Politifact](http:\/\/static.politifact.com\/api\/doc.html) \u2013 if you haven\u2019t heard of this one already, these are the people who rate politician\u2019s claims\/statements based off how truthful they are. Their API allows you to retrieve, among other things, a set of statements and their corresponding \u201ctruth\u201d ratings for any given politician in their database.\n- [Open Secrets](https:\/\/www.opensecrets.org\/resources\/create\/api_doc.php) \u2013 this is an interesting website that uses politician\u2019s FEC filings to analyze where campaign contributions are coming from; their API let\u2019s you ask how much money was contributed to any given candidate\u2019s campaign, from any particular industry, such as healthcare and national defense.\n- [Five Thirty Eight](http:\/\/fivethirtyeight.com\/) \u2013 this is a website that uses data-driven models to make predictions about many things, including the US political landscape; they provided an API that allowed us to ask for a given candidate\u2019s current stand in the polls.\n\nSo to put all this together, we decided to create a website that consolidated all this data in one place, to help educate American voters and let them choose their allegiances based off the facts; after all, the data doesn\u2019t lie. The site allows a user to choose a particular issue they\u2019re concerned about, and then displays information on the Republican, Democratic, and Libertarian presidential candidates; in particular, each candidate has information on:\n\n- Their current polling average, as pulled from Five Thirty Eight\n- Statement\u2019s they\u2019ve made concerning the user-chosen issue, as well as the truthfulness of the claim, as rated by Politifact\n- A list of campaign contributions\u00c2\u00a0from industries relevant to the user-chosen issue, provided by the Open Secrets database.\n\nIt took a long time to put together, and if you\u2019d asked us how it was coming along on Saturday afternoon (the project\u2019s were due Sunday morning), the outlook would\u2019ve been quite bleak. We were running into issues trying to do everything client-side, which in retrospect, was obviously a silly choice. To remedy this, we decided to use the Django Python framework, combined with Bootstrap to make an easy, good looking UI \u2013 this made it infinitely easier to process data retrieved via the above REST API\u2019s.\n\nWe also hit a snag with the Open Secrets API, in that there was a tight limit on the number of allowed API calls \u2013 throughout the development of the site, we probably burned through 3 or 4 API keys! The even bigger problem however, was the time it took to query their database \u2013 there was a point where it took at least 1 minute for a POST request to return with data. This was fixed by doing 1 pull every few hours, a sort of \u201ccaching\u201d solution \u2013 since it was just campaign finance information, which isn\u2019t subject to wildly fluctuate in the span a few hours, this was an acceptable solution. And of course, there was a huge performance improvement!\n\nBy the time Sunday morning came, we were pretty happy with our work \u2013 unlike last year, we managed to actually fully implement our idea! Fortunately, the judges agreed \u2013 many were very appreciative of our work, and thought it was pretty cool \u2013 we were pretty busy talking to judges for the most of the judging period. In the end, we won a $500 cash prize from Infusion, one of the many corporate sponsors at the hackathon.\n\nAll in all, I learned a lot, both in a technical and political sense \u2013 I came away $167 richer than I arrived, and with something interesting to write about. The experience was definitely the most valuable reward, and I hope it lets me pull this off again next year!\n\nOh right \u2013 [here\u2019s a link to the final product](http:\/\/candidata.herokuapp.com\/results\/).\n\n\n","html":"<p>Just like last year, the University of North Carolina at Chapel Hill and Major League Hacking teamed up to put on Hack NC 2016 &#8211; a 24 hour hackathon with the objective of building cool stuff, very fast. And, <a href=\"http:\/\/joshkayani.me\/my-hack-nc-experience\/\">just like last year<\/a>, I went &#8211; except this time, <strong>we won something<\/strong>.<\/p>\n<p><!--more--><\/p>\n<p>I formed a team with two friends of mine, and immediately we started thinking about ideas from a political angle. It was a few months before the 2016 US Presidential election, arguably\u00a0the most bizarre and controversial of recent history &#8211; could you really blame us? In any case, after mulling over a bunch of ideas, we discovered 3 political websites\u00a0had API&#8217;s that could give us potentially useful information:<\/p>\n<ul>\n<li><a href=\"http:\/\/static.politifact.com\/api\/doc.html\">Politifact<\/a> &#8211; if you haven&#8217;t heard of this one already, these are the people who rate politician&#8217;s claims\/statements based off how truthful they are. Their API allows you to retrieve, among other things, a set of statements and their corresponding &#8220;truth&#8221; ratings for any given politician in their database.<\/li>\n<li><a href=\"https:\/\/www.opensecrets.org\/resources\/create\/api_doc.php\">Open Secrets<\/a> &#8211; this is an interesting website that uses politician&#8217;s FEC filings to analyze where campaign contributions are coming from; their API let&#8217;s you ask how much money was contributed to any given candidate&#8217;s campaign, from any particular industry, such as healthcare and national defense.<\/li>\n<li><a href=\"http:\/\/fivethirtyeight.com\/\">Five Thirty Eight<\/a> &#8211; this is a website that uses data-driven models to make predictions about many things, including the US political landscape; they provided an API that allowed us to ask for a given candidate&#8217;s current stand in the polls.<\/li>\n<\/ul>\n<p>So to put all this together, we decided to create a website that consolidated all this data in one place, to help educate American voters and let them choose their allegiances based off the facts; after all, the data doesn&#8217;t lie. The site allows a user to choose a particular issue they&#8217;re concerned about, and then displays information on the Republican, Democratic, and Libertarian presidential candidates; in particular, each candidate has information on:<\/p>\n<ul>\n<li>Their current polling average, as pulled from Five Thirty Eight<\/li>\n<li>Statement&#8217;s they&#8217;ve made concerning the user-chosen issue, as well as the truthfulness of the claim, as rated by Politifact<\/li>\n<li>A list of campaign contributions\u00a0from industries relevant to the user-chosen issue, provided by the Open Secrets database.<\/li>\n<\/ul>\n<p>It took a long time to put together, and if you&#8217;d asked us how it was coming along on Saturday afternoon (the project&#8217;s were due Sunday morning), the outlook would&#8217;ve been quite bleak. We were running into issues trying to do everything client-side, which in retrospect, was obviously a silly choice. To remedy this, we decided to use the Django Python framework, combined with Bootstrap to make an easy, good looking UI &#8211; this made it infinitely easier to process data retrieved via the above REST API&#8217;s.<\/p>\n<p>We also hit a snag with the Open Secrets API, in that there was a tight limit on the number of allowed API calls &#8211; throughout the development of the site, we probably burned through 3 or 4 API keys! The even bigger problem however, was the time it took to query their database &#8211; there was a point where it took at least 1 minute for a POST request to return with data. This was fixed by doing 1 pull every few hours, a sort of &#8220;caching&#8221; solution &#8211; since it was just campaign finance information, which isn&#8217;t subject to wildly fluctuate in the span a few hours, this was an acceptable solution. And of course, there was a huge performance improvement!<\/p>\n<p>By the time Sunday morning came, we were pretty happy with our work &#8211; unlike last year, we managed to actually fully implement our idea! Fortunately, the judges agreed &#8211; many were very appreciative of our work, and thought it was pretty cool &#8211; we were pretty busy talking to judges for the most of the judging period. In the end, we won a $500 cash prize from Infusion, one of the many corporate sponsors at the hackathon.<\/p>\n<p>All in all, I learned a lot, both in a technical and political sense &#8211; I came away $167 richer than I arrived, and with something interesting to write about. The experience was definitely the most valuable reward, and I hope it lets me pull this off again next year!<\/p>\n<p>Oh right &#8211; <a href=\"http:\/\/candidata.herokuapp.com\/results\/\">here&#8217;s a link to the final product<\/a>.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 15 Nov 2016 12:47:02 +0000","created_by":1,"updated_at":"Tue, 20 Dec 2016 13:34:05 +0000","updated_by":1,"published_at":"Tue, 15 Nov 2016 12:47:02 +0000","published_by":1}],"tags":[],"posts_tags":[],"users":[{"id":1,"slug":"josh","bio":false,"website":"","created_at":"Thu, 24 Dec 2015 04:56:07 +0000","created_by":1,"email":"josh@joshkayani.me","name":"josh"}]},"meta":{"exported_on":"Fri, 23 Dec 2016 00:52:44 +0000","version":"000"}}